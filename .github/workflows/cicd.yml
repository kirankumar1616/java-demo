name: CICD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: test

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn package --file spring-boot-app/pom.xml

      - name: Trivy FS Scan
        run: |
          trivy fs --format table -o trivy-fs-report.html .

      - name: Build Docker Image
        run: |
          docker build -t kiranprav:latest -f spring-boot-app/Dockerfile spring-boot-app/

      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html kiranprav:latest

#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}

#      - name: Push Docker Image
#        run: |
#            docker push kiranprav/kiranabhishek:latest
            
      - name: Tag Docker Image & Push Docker image to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com
          docker tag kiranprav:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com/kiranprav:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.REGION }}.amazonaws.com/kiranprav:latest
      - name: Kubectl Action
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.EKS_CLUSTER_TOKEN }}
      - run: |
         kubectl apply -f deployment-service.yaml -n webapps
         kubectl get svc -n webapps
